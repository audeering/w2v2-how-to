name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ ubuntu-20.04, windows-latest, macOS-latest ]
        os: [ ubuntu-20.04 ]
        python-version: [3.8]
#        include:
#          - os: ubuntu-latest
#            python-version: 3.7
#          - os: ubuntu-latest
#            python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - name: Cache emodb
      uses: actions/cache@v2
      with:
        path: cache/emodb
        key: emodb-1.1.1

    - name: Cache model
      uses: actions/cache@v2
      with:
        path: cache/model.zip
        key: model-1.1.0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Prepare Ubuntu
      run: |
        sudo apt-get update
        sudo apt-get install -y sox libsox-fmt-mp3 ffmpeg mediainfo
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'ubuntu-20.04'

    - name: Prepare OSX
      run: brew install sox ffmpeg mediainfo
      if: matrix.os == 'macOS-latest'

    - name: Windows
      run: choco install sox.portable ffmpeg mediainfo-cli
      if: matrix.os == 'windows-latest'

    - name: Install dependencies
      run: |
        python -V
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r tests/requirements.txt

    - name: Test with pytest
      run: |
        python -m pytest --nbmake --nbmake-timeout=3000 notebook.ipynb
